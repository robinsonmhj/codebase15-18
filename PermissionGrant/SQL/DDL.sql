drop table if exists monitor.privilege;
drop table if exists monitor.users;
drop table if exists monitor.groups;


drop table if exists monitor.roles;
create table monitor.roles(
	role_id int GENERATED BY DEFAULT AS IDENTITY,
	role_name varchar(20) not null,
	privilege varchar(200) not null,
	primary key (role_id)
)
EVICTION BY LRUHEAPPERCENT EVICTACTION OVERFLOW PERSISTENT'DISK_STORE' ASYNCHRONOUS;


drop table if exists monitor."GROUPS";
create table monitor."GROUPS"(
   group_id int GENERATED BY DEFAULT AS IDENTITY,
   group_name varchar(100) not null,
   primary key (group_id)
)
EVICTION BY LRUHEAPPERCENT EVICTACTION OVERFLOW PERSISTENT'DISK_STORE' ASYNCHRONOUS;


drop table if exists monitor.request_history;
create table monitor.request_history(
   request_id int GENERATED BY DEFAULT AS IDENTITY,
   user_name varchar(50) not null,
   group_id int not null CONSTRAINT rh_group_id_fk REFERENCES monitor."GROUPS"	ON DELETE RESTRICT,
   schema_name varchar(20) not null,
   insert_time TIMESTAMP not null default current_timestamp,
   primary key (request_id)
)
PARTITION BY column (request_id)
redundancy 2
EVICTION BY LRUHEAPPERCENT EVICTACTION OVERFLOW PERSISTENT'DISK_STORE' ASYNCHRONOUS;

drop table if exists monitor.procedures;
create table monitor.procedures(
    procedure_id int GENERATED BY DEFAULT AS IDENTITY,
    schema_name varchar(20) not null,
    procedure_name varchar(200) not null,
	level varchar(10) not null,
    primary key (procedure_id)
    
)
PARTITION BY column (procedure_id)
redundancy 2
EVICTION BY LRUHEAPPERCENT EVICTACTION OVERFLOW PERSISTENT'DISK_STORE' ASYNCHRONOUS;

drop table if exists monitor.privilege;
create table monitor.privilege(
    role_id int not null CONSTRAINT p_role_id_fk REFERENCES monitor.roles	ON DELETE RESTRICT,
	group_id int not null CONSTRAINT p_group_id_fk REFERENCES monitor.groups	ON DELETE RESTRICT,
    schema_name varchar(20) not null,
    primary key (role_id,group_id,schema_name)
)
EVICTION BY LRUHEAPPERCENT EVICTACTION OVERFLOW PERSISTENT'DISK_STORE' ASYNCHRONOUS;



insert into monitor.roles (role_name,privilege) values('READ','select');
insert into monitor.roles (role_name,privilege) values('WRITE','select,update,insert,delete');
insert into monitor.roles (role_name,privilege) values('EXECUTE','select,update,insert,delete,execute');
insert into monitor.roles (role_name,privilege) values('DEPLOY','select,update,insert,delete,trigger,alter,references,execute');
insert into monitor.roles (role_name,privilege) values('DBA','select,update,insert,delete,trigger,alter,references,execute');

insert into monitor."GROUPS" (group_name) values('DEV_GEMFIRE_ReadOnly_SG');
insert into monitor."GROUPS" (group_name) values('DEV_GEMFIRE_RW_SG');
insert into monitor."GROUPS" (group_name) values('DEV_GEMFIRE_RWE_SG');
insert into monitor."GROUPS" (group_name) values('DEV_GEMFIRE_Deployment_SG');
insert into monitor."GROUPS" (group_name) values('DEV_GEMFIRE_DBA_SG');


insert into monitor.privilege values(1,1,'ODS');
insert into monitor.privilege values(2,2,'ODS');
insert into monitor.privilege values(3,3,'ODS');
insert into monitor.privilege values(4,4,'ODS');
insert into monitor.privilege values(5,5,'ODS');
insert into monitor.privilege values(1,1,'MONITOR');
insert into monitor.privilege values(1,2,'MONITOR');
insert into monitor.privilege values(1,3,'MONITOR');
insert into monitor.privilege values(4,4,'MONITOR');
insert into monitor.privilege values(5,5,'MONITOR');


insert into monitor.procedures(schema_name,procedure_name,level) values ('SYS','ADD_LISTENER','DEPLOY'),('SYS','ATTACH_GATEWAY_EVENT_ERROR_HANDLER','DEPLOY'),('SYS','ATTACH_LOADER','DEPLOY'),('SYS','ATTACH_WRITER','DEPLOY'),('SYS','CANCEL_STATEMENT','EXECUTE'),('SYS','CHANGE_PASSWORD','DBA'),('SYS','CREATE_ALL_BUCKETS','DBA'),('SYS','CREATE_USER','DBA'),('SYS','DUMP_STACKS','DBA'),('SYSCS_UTIL','EMPTY_STATEMENT_CACHE','DBA'),('SYSCS_UTIL','EXPORT_QUERY','EXECUTE'),('SYSCS_UTIL','EXPORT_TABLE','EXECUTE'),('SYS','HDFS_FLUSH_QUEUE','DBA'),('SYS','HDFS_FORCE_COMPACTION','DBA'),('SYSCS_UTIL','IMPORT_DATA','EXECUTE'),('SYSCS_UTIL','IMPORT_DATA_EX','EXECUTE'),('SYSCS_UTIL','IMPORT_DATA_LOBS_FROM_EXTFILE','EXECUTE'),('SYSCS_UTIL','IMPORT_TABLE','EXECUTE'),('SYSCS_UTIL','IMPORT_TABLE_EX','EXECUTE'),('SYSCS_UTIL','IMPORT_TABLE_LOBS_FROM_EXTFILE','EXECUTE'),('SYS','INCREMENT_TABLE_VERSION','DBA'),('SQLJ','INSTALL_JAR','DEPLOY'),('SYS','REBALANCE_ALL_BUCKETS','DBA'),('SYS','REFRESH_LDAP_GROUP','EXECUTE'),('SYS','REMOVE_GATEWAY_EVENT_ERROR_HANDLER','DBA'),('SQLJ','REMOVE_JAR','DEPLOY'),('SYS','REMOVE_LISTENER','DEPLOY'),('SYS','REMOVE_LOADER','DEPLOY'),('SYS','REMOVE_WRITER','DEPLOY'),('SQLJ','REPLACE_JAR','DEPLOY'),('SYS','SET_CRITICAL_HEAP_PERCENTAGE','DBA'),('SYS','SET_CRITICAL_HEAP_PERCENTAGE_SG','DBA'),('SYS','SET_CRITICAL_OFFHEAP_PERCENTAGE','DBA'),('SYS','SET_CRITICAL_OFFHEAP_PERCENTAGE_SG','DBA'),('SYS','SET_EVICTION_HEAP_PERCENTAGE','DBA'),('SYS','SET_EVICTION_HEAP_PERCENTAGE_SG','DBA'),('SYS','SET_EVICTION_OFFHEAP_PERCENTAGE','DBA'),('SYS','SET_EVICTION_OFFHEAP_PERCENTAGE_SG','DBA'),('SYSCS_UTIL','SET_EXPLAIN_CONNECTION','EXECUTE'),('SYS','SET_GLOBAL_STATEMENT_STATISTICS','DBA'),('SYS','SET_QUERYSTATS','DBA'),('SYSCS_UTIL','SET_STATISTICS_TIMING','DBA'),('SYS','SET_TRACE_FLAG','DBA'),('SYSCS_UTIL','SET_USER_ACCESS','DBA'),('SYS','START_ASYNC_EVENT_LISTENER','DEPLOY'),('SYS','START_GATEWAYSENDER','DEPLOY'),('SYS','STOP_ASYNC_EVENT_LISTENER','DEPLOY'),('SYS','STOP_GATEWAYSENDER','DEPLOY'); 
